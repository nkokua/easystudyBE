name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_call:


jobs:
  build:

    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass

    # Docker로 PostgreSQL 띄우기
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432

        env:
            POSTGRES_DB_URL: localhost:5432
            POSTGRES_DB: testdb
            POSTGRES_USER: testuser
            POSTGRES_PASSWORD: testpass

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Set up Temurin JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for Gradle
      run: chmod +x gradlew

    - name: Build with out Test
      run: ./gradlew build -x test

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/easystudy:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/easystudy:latest